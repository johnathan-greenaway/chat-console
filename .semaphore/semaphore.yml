version: v1.0
name: console-chat
agent:
  machine:
    type: e2-standard-2
    os_image: ubuntu2204
blocks:
  - name: Test and Deploy Console Chat
    task:
      secrets:
        - name: TWINE_PASSWORD
      jobs:
        - name: Test and Deploy Console-Chat
          commands:
            - sem-version python 3.11
            - checkout
            - python -m pip install --upgrade pip
            - cd chat-cli
            - pip install .
            - pip install -r requirements.txt
            - pip install pytest
            # - pytest --no-tests-exit-0
            
            # Extract base version from app/__init__.py
            - export BASE_VERSION=$(python -c "import sys; sys.path.append('./'); from app import __version__; print(__version__)")
            - echo "Base version is $BASE_VERSION"
            
            # Handle different branches with appropriate version suffixes
            - |
              if [[ "${SEMAPHORE_GIT_BRANCH}" == "main" ]]; then
                # Release branch - use clean version
                FINAL_VERSION="$BASE_VERSION"
                echo "On release branch - using version $FINAL_VERSION"
              elif [[ "${SEMAPHORE_GIT_BRANCH}" == "development" ]]; then
                # Development branch - add .dev1 suffix
                FINAL_VERSION="${BASE_VERSION}.dev1"
                echo "On development branch - using version $FINAL_VERSION"
              elif [[ "${SEMAPHORE_GIT_BRANCH}" =~ ^feature/ ]]; then
                # Feature branch - add .dev0+feature.name suffix
                FEATURE_NAME=$(echo ${SEMAPHORE_GIT_BRANCH} | sed "s/feature\///" | sed "s/[-\/]/./g")
                FINAL_VERSION="${BASE_VERSION}.dev0+feature.${FEATURE_NAME}"
                echo "On feature branch - using version $FINAL_VERSION"
              else
                # Any other branch - add .dev2+branch.name suffix to avoid conflicts
                BRANCH_NAME=$(echo ${SEMAPHORE_GIT_BRANCH} | sed "s/[-\/]/./g")
                FINAL_VERSION="${BASE_VERSION}.dev2+branch.${BRANCH_NAME}"
                echo "On branch ${SEMAPHORE_GIT_BRANCH} - using version $FINAL_VERSION"
              fi
              
              # Update version in setup.py
              sed -i "s/version=[\"'][^\"']*[\"']/version=\"$FINAL_VERSION\"/" setup.py
              
              # Build and upload
              pip install twine build
              python -m build
              
              # Always use --skip-existing flag to prevent errors on uploads
              TWINE_USERNAME=__token__ TWINE_PASSWORD=${TWINE_PASSWORD} python -m twine upload --verbose --skip-existing dist/*
